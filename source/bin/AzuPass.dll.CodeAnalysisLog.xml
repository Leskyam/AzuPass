<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 11.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="11.0">
 <Targets>
  <Target Name="D:\Proyectos\Web\Sistema corporativo de autenticación (AzuPass)\ws\source\AzuPass\bin\AzuPass.dll">
   <Modules>
    <Module Name="azupass.dll">
     <Namespaces>
      <Namespace Name="TEICOCF.WebServices">
       <Types>
        <Type Name="DataMSSql" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ConnectionString" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_ConnectionString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2013-05-23 11:52:02Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="d:\Proyectos\Web\Sistema corporativo de autenticación (AzuPass)\ws\source\AzuPass" File="clsDataMSSql.cs" Line="44">'DataMSSql.ConnectionString.get()' crea una excepción de tipo 'ArgumentException', un tipo de excepción que no se debe producir en una propiedad. Si puede producirse la instancia de esta excepción, use un tipo de excepción diferente, convierta esta propiedad en un método o cambie la lógica de esta propiedad para que no produzca una excepción.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#getCommand(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="No usar Dispose varias veces en objetos" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2013-05-23 11:52:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\Proyectos\Web\Sistema corporativo de autenticación (AzuPass)\ws\source\AzuPass" File="clsDataMSSql.cs" Line="101">El objeto 'Conn' admite Dispose más de una vez en el método 'DataMSSql.getCommand(string)'. Para evitar generar una excepción System.ObjectDisposedException, no debe llamar a Dispose más de una vez en un objeto.: Lines: 101</Issue>
            </Message>
            <Message TypeName="Revisar consultas SQL para comprobar si tienen vulnerabilidades de seguridad" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-05-23 11:52:02Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\Proyectos\Web\Sistema corporativo de autenticación (AzuPass)\ws\source\AzuPass" File="clsDataMSSql.cs" Line="97">La cadena de consulta pasada a 'SqlCommand.SqlCommand(string, SqlConnection)' en 'DataMSSql.getCommand(string)' podría contener las siguientes variables: 'storedProcedure'. Si alguna de estas variables puede proceder de datos proporcionados por el usuario, considere el uso de un procedimiento almacenado o una consulta SQL parametrizada en lugar de compilar la consulta con concatenaciones de cadenas.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DataMySQL" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ConnectionString" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_ConnectionString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2013-05-23 11:52:02Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="d:\Proyectos\Web\Sistema corporativo de autenticación (AzuPass)\ws\source\AzuPass" File="clsDataMySql.cs" Line="44">'DataMySQL.ConnectionString.get()' crea una excepción de tipo 'ArgumentException', un tipo de excepción que no se debe producir en una propiedad. Si puede producirse la instancia de esta excepción, use un tipo de excepción diferente, convierta esta propiedad en un método o cambie la lógica de esta propiedad para que no produzca una excepción.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#getCommand(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="No usar Dispose varias veces en objetos" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2013-05-23 11:52:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\Proyectos\Web\Sistema corporativo de autenticación (AzuPass)\ws\source\AzuPass" File="clsDataMySql.cs" Line="105">El objeto 'Conn' admite Dispose más de una vez en el método 'DataMySQL.getCommand(string)'. Para evitar generar una excepción System.ObjectDisposedException, no debe llamar a Dispose más de una vez en un objeto.: Lines: 105</Issue>
            </Message>
            <Message TypeName="Revisar consultas SQL para comprobar si tienen vulnerabilidades de seguridad" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-05-23 11:52:02Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\Proyectos\Web\Sistema corporativo de autenticación (AzuPass)\ws\source\AzuPass" File="clsDataMySql.cs" Line="101">La cadena de consulta pasada a 'MySqlCommand.MySqlCommand(string, MySqlConnection)' en 'DataMySQL.getCommand(string)' podría contener las siguientes variables: 'storedProcedure'. Si alguna de estas variables puede proceder de datos proporcionados por el usuario, considere el uso de un procedimiento almacenado o una consulta SQL parametrizada en lugar de compilar la consulta con concatenaciones de cadenas.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DataPostgreSQL" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ConnectionString" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_ConnectionString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2013-05-23 11:52:02Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="d:\Proyectos\Web\Sistema corporativo de autenticación (AzuPass)\ws\source\AzuPass" File="clsDataPostgreSql.cs" Line="44">'DataPostgreSQL.ConnectionString.get()' crea una excepción de tipo 'ArgumentException', un tipo de excepción que no se debe producir en una propiedad. Si puede producirse la instancia de esta excepción, use un tipo de excepción diferente, convierta esta propiedad en un método o cambie la lógica de esta propiedad para que no produzca una excepción.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#getCommand(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="No usar Dispose varias veces en objetos" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2013-05-23 11:52:02Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\Proyectos\Web\Sistema corporativo de autenticación (AzuPass)\ws\source\AzuPass" File="clsDataPostgreSql.cs" Line="96">El objeto 'Conn' admite Dispose más de una vez en el método 'DataPostgreSQL.getCommand(string)'. Para evitar generar una excepción System.ObjectDisposedException, no debe llamar a Dispose más de una vez en un objeto.: Lines: 96</Issue>
            </Message>
            <Message TypeName="Revisar consultas SQL para comprobar si tienen vulnerabilidades de seguridad" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-05-23 11:52:02Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="d:\Proyectos\Web\Sistema corporativo de autenticación (AzuPass)\ws\source\AzuPass" File="clsDataPostgreSql.cs" Line="92">La cadena de consulta pasada a 'NpgsqlCommand.NpgsqlCommand(string, NpgsqlConnection)' en 'DataPostgreSQL.getCommand(string)' podría contener las siguientes variables: 'storedProcedure'. Si alguna de estas variables puede proceder de datos proporcionados por el usuario, considere el uso de un procedimiento almacenado o una consulta SQL parametrizada en lugar de compilar la consulta con concatenaciones de cadenas.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
   <Name>No producir excepciones en ubicaciones inesperadas</Name>
   <Description>No produzca excepciones de forma explícita en ubicaciones inesperadas. Hay algunos métodos, como Equals y GetHashCode, que los usuarios no esperan que produzcan excepciones. Por tanto, las llamadas a estos métodos no se suelen ajustar en bloques try catch.</Description>
   <Resolution Name="PropertyGetter">{0} crea una excepción de tipo {1}, un tipo de excepción que no se debe producir en una propiedad. Si puede producirse la instancia de esta excepción, use un tipo de excepción diferente, convierta esta propiedad en un método o cambie la lógica de esta propiedad para que no produzca una excepción.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386039(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="No usar Dispose varias veces en objetos" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>No usar Dispose varias veces en objetos</Name>
   <Description>Un método Dispose correctamente implementado se puede llamar varias veces sin producir ninguna excepción. Sin embargo, esto no está garantizado y, para evitar generar una excepción System.ObjectDisposedException, no debe llamar al método Dispose más de una vez en un objeto.</Description>
   <Resolution Name="Default">El objeto {0} admite Dispose más de una vez en el método {1}. Para evitar generar una excepción System.ObjectDisposedException, no debe llamar a Dispose más de una vez en un objeto.: Lines: 96</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="Revisar consultas SQL para comprobar si tienen vulnerabilidades de seguridad" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Revisar consultas SQL para comprobar si tienen vulnerabilidades de seguridad</Name>
   <Description>Una cadena de comando SQL compilada a partir de datos proporcionados por el usuario es vulnerable a ataques pon inyección de código SQL. Microsoft SQL Server y otros servidores de bases de datos admiten procedimientos almacenados y consultas SQL parametrizadas, que reducen el riesgo de ataques por inyección.</Description>
   <Resolution Name="WithNonLiterals">La cadena de consulta pasada a {0} en {1} podría contener las siguientes variables: {2}. Si alguna de estas variables puede proceder de datos proporcionados por el usuario, considere el uso de un procedimiento almacenado o una consulta SQL parametrizada en lugar de compilar la consulta con concatenaciones de cadenas.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Categoría</String>
  <String Key="Certainty">Certeza</String>
  <String Key="CollapseAll">Contraer todo</String>
  <String Key="CheckId">Comprobar id.</String>
  <String Key="Error">Error</String>
  <String Key="Errors">errores</String>
  <String Key="ExpandAll">Expandir todo</String>
  <String Key="Help">Ayuda</String>
  <String Key="Line">Línea</String>
  <String Key="Messages">mensajes</String>
  <String Key="LocationNotStoredInPdb">[Ubicación no almacenada en Pdb]</String>
  <String Key="Project">Proyecto</String>
  <String Key="Resolution">Resolución</String>
  <String Key="Rule">Regla</String>
  <String Key="RuleFile">Archivo de regla</String>
  <String Key="RuleDescription">Descripción de la regla</String>
  <String Key="Source">Origen</String>
  <String Key="Status">Estado</String>
  <String Key="Target">Círculos concéntricos</String>
  <String Key="Warning">Advertencia</String>
  <String Key="Warnings">advertencias</String>
  <String Key="ReportTitle">Informe de análisis del código</String>
 </Localized>
</FxCopReport>
